
package org.tempuri;

import org.minustserv.ArrayOfSubjectData;

import java.net.MalformedURLException;
import java.net.URL;
import javax.jws.WebParam;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Subjects", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://172.31.14.26:8079/MinustServ/Subjects/?singleWsdl") // "file:/D:/Minjust/client.xml")
public class Subjects extends Service
{

    private static ISubjects ret_sbj ;

    private final static URL SUBJECTS_WSDL_LOCATION;
    private final static WebServiceException SUBJECTS_EXCEPTION;
    private final static QName SUBJECTS_QNAME = new QName("http://tempuri.org/", "Subjects");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://172.31.14.26:8079/MinustServ/Subjects/?singleWsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SUBJECTS_WSDL_LOCATION = url;
        SUBJECTS_EXCEPTION = e;
    }

    public Subjects() {
        super(__getWsdlLocation(), SUBJECTS_QNAME);

        ret_sbj = getBasicHttpBindingISubjects();
    }

    public Subjects(WebServiceFeature... features) {
        super(__getWsdlLocation(), SUBJECTS_QNAME, features);
    }

    public Subjects(URL wsdlLocation) {
        super(wsdlLocation, SUBJECTS_QNAME);
    }

    public Subjects(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SUBJECTS_QNAME, features);
    }

    public Subjects(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Subjects(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ISubjects
     */
    @WebEndpoint(name = "BasicHttpBinding_ISubjects")
    private ISubjects getBasicHttpBindingISubjects() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ISubjects"), ISubjects.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISubjects
     */
    @WebEndpoint(name = "BasicHttpBinding_ISubjects")
    private ISubjects getBasicHttpBindingISubjects(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ISubjects"), ISubjects.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SUBJECTS_EXCEPTION!= null) {
            throw SUBJECTS_EXCEPTION;
        }
        return SUBJECTS_WSDL_LOCATION;
    }


    public ArrayOfSubjectData getSubjectData(Integer unp)
    {
        return ret_sbj.getSubjectData(unp);

    };

    public ArrayOfSubjectData getSubjectDataName(String name)
    {
        return ret_sbj.getSubjectDataName(name);

    };

}
